<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Series_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get series by id
     */
    function get_series($id)
    {
        return $this->db->get_where('series', array('id' => $id))->row_array();
    }

    /*
     * Get all series count
     */
    function get_all_series_count()
    {
        $query = $this
            ->db
            ->get('series');

        return $query->num_rows();
    }

    /*
     * Get all series
     */
    function get_all_series($limit, $start, $col, $dir)
    {
        $this->db->select('series.*, brand.name as brand_name,brand.id as brand_id');
        $this->db->join('brand','brand.id = series.brand_id','left outer');
        $query = $this
            ->db
            ->limit($limit, $start)
            ->order_by($col, $dir)
            ->get('series');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }
    function series_search($limit, $start, $search, $col, $dir)
    {
        $this->db->select('series.*, brand.name as brand_name');
        $this->db->join('brand','brand.id = series.brand_id','left outer');
        $query = $this
            ->db
            ->like('series.id', $search)
            ->or_like('series.name', $search)
            ->or_like('brand.name', $search)
            ->limit($limit, $start)
            ->order_by($col, $dir)
            ->get('series');


        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function series_search_count($search)
    {
        $this->db->select('series.*, brand.name as brand_name');
        $this->db->join('brand','brand.id = series.brand_id','left outer');
        $query = $this
            ->db
            ->like('series.id', $search)
            ->or_like('series.name', $search)
            ->or_like('brand.name', $search)
            ->get('series');

        return $query->num_rows();
    }
    /*
     * function to add new series
     */
    function add_series($params)
    {
        $this->db->insert('series', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update series
     */
    function update_series($id, $params)
    {
        $this->db->where('id', $id);
        return $this->db->update('series', $params);
    }

    /*
     * function to delete series
     */
    function delete_series($id)
    {
        return $this->db->delete('series', array('id' => $id));
    }
}
